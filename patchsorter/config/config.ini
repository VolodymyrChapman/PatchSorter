[common]
#supports 32, 64, 256 px
patchsize = 32
codesize = 32

[flask]
debug = False
port = 5558
clear_stale_jobs_at_start = False
log_level = DEBUG
threads = 24

[sqlalchemy]
#database_uri = sqlite:///patch_sorter_data.db
#https://stackoverflow.com/questions/34009296/using-sqlalchemy-session-from-flask-raises-sqlite-objects-created-in-a-thread-c
database_uri = sqlite:///patch_sorter_data.db?check_same_thread=False
echo = False
delete_old_jobs_at_start = True

[pooling]
npoolthread = 4

[make_patches]
patchsize =  ${common:patchsize}
makepatch_script_name = ./approaches/make_patches/make_patch_database.py

[frontend]
# how many seconds to sleep between checking with the server if an object is ready yet:
retry_seconds = 5
context_patch_size=256
patchsize=${common:patchsize}

[train_dl]
#train_script_name = ./approaches/autoencoder/train_dl_autoencoder.py
#train_script_name = ./approaches/barlowtwins/train_dl_barlowtwins.py
train_script_name = ./approaches/simclr/train_dl_simclr.py
numepochs_inital = 100
minimum_loss_earlystop = .001
#a value of 1 = 100%, 2 = 200%, .5 = 50%
unlabeled_percent = 2
numepochs = 5
num_epochs_earlystop = 10
num_min_epochs = 10
patchsize = ${common:patchsize}
#batch size for train_dl needs to be smaller, 768 is too large for patches of size 256 x 256 (reasonable number is 16 or 32),else the GPU will likely run out of memory
batchsize = 32
maskpatches = False
numworkers=0
prev_model_init = True

[embed]
#embed_script_name = ./approaches/autoencoder/make_embed_autoencoder.py
#embed_script_name = ./approaches/barlowtwins/make_embed_barlowtwins.py
embed_script_name = ./approaches/simclr/make_embed_simclr.py
maskpatches = ${train_dl:maskpatches}
patchsize = ${common:patchsize}
batchsize = 32
#for testing this is 4, by default should be -1
dimredux = -1
numworkers=${train_dl:numworkers}
maxpoints=5000
limitperpage=50
#use umap in semi supervised mode to improve embedding?
semisupervised=True
#save_features needs to be true if you would like to use a feature based embedding
save_features = True

[search_db]
searchdb_script_name = ./approaches/search_db/make_search_database.py

[image_details]
delimitby = |
mask_folder = mask
csv_folder = csv


[caching]
searchtreestorageitems=1
searchqueries=5



[image_search]
approach_options = embed:Embedding:./approaches/image_search/image_search_embed.py
                   featvec:Feature Vector:./approaches/image_search/image_search_feature_vector.py
approach_default = embed
max_threshold = 100000
nneighbors = 100
maskpatches = ${train_dl:maskpatches}
patchsize = ${common:patchsize}
batchsize = 1024

[image_output]
imgoutput_script_name = ./approaches/image_output/make_img_outputs.py

[show_patches]
patchsize_32 = 10
patchsize_64 = 7
patchsize_256 = 4

